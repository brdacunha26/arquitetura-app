// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  name     String
  role     String @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  phone       String
  address     String?
  cpf         String?   @unique
  cnpj        String?   @unique
  type        String    @default("PESSOA_FISICA") // PESSOA_FISICA ou PESSOA_JURIDICA
  projects    Project[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Project {
  id            String    @id @default(uuid())
  title         String
  description   String
  clientId      String
  client        Client    @relation(fields: [clientId], references: [id])
  budget        Float
  status        String    // BUDGET_IN_PROGRESS, BUDGET_SENT, BUDGET_APPROVED, IN_PROGRESS, COMPLETED
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  paymentMethod String    // pix, cartao
  installments  Int       @default(1)
  deadline      DateTime
  tasks         Task[]
  team          TeamMember[]
  documents     Document[]
  transactions  Transaction[]
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String
  status      String    // PENDING, IN_PROGRESS, COMPLETED, DELAYED, CANCELLED
  date        DateTime
  deadline    DateTime
  projectId   String
  project     Project   @relation(fields: [projectId], references: [id])
  assignedTo  String?
  priority    String    @default("LOW") // LOW, MEDIUM, HIGH
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model TeamMember {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  role        String    // ARCHITECT, ENGINEER, DESIGNER, etc.
  phone       String?
  status      String    @default("ACTIVE") // ACTIVE, INACTIVE, ON_VACATION
  projects    Project[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Document {
  id          String    @id @default(uuid())
  title       String
  type        String    // CONTRACT, BLUEPRINT, PERMIT, etc.
  url         String
  projectId   String
  project     Project   @relation(fields: [projectId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Transaction {
  id          String    @id @default(uuid())
  type        String    // INCOME, EXPENSE
  amount      Float
  description String
  date        DateTime
  status      String    // PENDING, COMPLETED, CANCELLED
  projectId   String
  project     Project   @relation(fields: [projectId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Role {
  id           String   @id @default(uuid())
  name         String   @unique
  permissions  String   // JSON stringified permissions
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
